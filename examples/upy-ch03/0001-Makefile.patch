From 865a7c6a57f1ffeb364cf986f1a17f8028379bb0 Mon Sep 17 00:00:00 2001
From: Tom Lin <tomlin@apk-info.com>
Date: Wed, 7 Mar 2018 21:41:51 +0800
Subject: [PATCH 1/4] =?UTF-8?q?=E4=BF=AE=E6=94=B9=E5=8F=AF=E4=BB=A5?=
 =?UTF-8?q?=E7=B7=A8=E8=AD=AFMakefile?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 ports/mt7697/GCC/Makefile | 48 +++++++++++++++++++++++------------------------
 1 file changed, 23 insertions(+), 25 deletions(-)

diff --git a/ports/mt7697/GCC/Makefile b/ports/mt7697/GCC/Makefile
index d20d9f52..987e1745 100644
--- a/ports/mt7697/GCC/Makefile
+++ b/ports/mt7697/GCC/Makefile
@@ -35,15 +35,17 @@
 ###################################################
 # Project vairables assignment
 
-SOURCE_DIR = ../../../../..
+SOURCE_DIR = $(LINKIT_SDK_PATH)
 PWD= $(shell pwd)
-SDK_PATH    = $(abspath $(PWD)/$(SOURCE_DIR))
+SDK_PATH    = $(LINKIT_SDK_PATH)
+
 FEATURE = feature.mk
 include $(FEATURE)
 
 DEBUG = 0
 FLOAT_TYPE = hard
 BUILD_DIR = $(PWD)/build
+MY_BUILD_DIR = $(PWD)/build
 
 # Project name
 PROJ_NAME       = $(notdir $(abspath $(dir $(PWD))))
@@ -53,6 +55,8 @@ OUTPATH = $(PWD)/build
 C_OBJS = $(C_FILES:%.c=$(BUILD_DIR)/%.o)
 CXX_OBJS        = $(CXX_FILES:%.cpp=$(BUILD_DIR)/%.o)
 S_OBJS = $(S_FILES:%.s=$(BUILD_DIR)/%.o)
+MY_C_OBJS = $(MY_C_FILES:%.c=$(MY_BUILD_DIR)/%.o)
+MY_S_OBJS = $(MY_S_FILES:%.s=$(MY_BUILD_DIR)/%.o)
 
 # LD Flags
 LDFLAGS = $(ALLFLAGS) $(FPUFLAGS) --specs=nano.specs -lnosys -nostartfiles
@@ -91,11 +95,6 @@ else
 include $(SOURCE_DIR)/prebuilt/middleware/MTK/minisupp/module.mk
 endif
 
-
-
-
-
-
 ###################################################
 # Sources or Lib
 #include lwip
@@ -134,25 +133,24 @@ ifeq ($(MTK_MINICLI_ENABLE),y)
 APP_FILES += driver/board/linkit7697_hdk/util/src/io_def.c
 endif
 
-C_FILES += $(APP_FILES)
+MY_C_FILES = $(APP_FILES)
 
 # add startup file to build
-S_FILES += $(APP_PATH)/GCC/startup_mt7687.s
-
-
+MY_S_FILES += $(APP_PATH)/GCC/startup_mt7687.s
 
 # include path
 CFLAGS += -I$(SOURCE_DIR)/driver/chip/mt7687/inc
 CFLAGS += -I$(SOURCE_DIR)/driver/chip/inc
 CFLAGS += -I$(SOURCE_DIR)/middleware/MTK/wifi_service/combo/inc
-CFLAGS += -I$(SOURCE_DIR)/$(APP_PATH)/inc
+CFLAGS += -I$(APP_PATH)/inc
 CFLAGS += -I$(SOURCE_DIR)/driver/CMSIS/Include
 CFLAGS += -I$(SOURCE_DIR)/driver/CMSIS/Device/MTK/mt7687/Include
 CFLAGS += -I$(SOURCE_DIR)/driver/board/linkit7697_hdk/ept/inc
+CFLAGS += -I$(SOURCE_DIR)/driver/board/linkit7697_hdk/external_flash/driver/board/linkit7697_hdk/external_flash/inc
 
 # BLE include path
 CFLAGS += -D__BT_DEBUG__
-CFLAGS += -I$(SOURCE_DIR)/$(APP_PATH)/src/ut_app
+CFLAGS += -I$(APP_PATH)/src/ut_app
 CFLAGS += -I$(SOURCE_DIR)/middleware/MTK/bluetooth/inc
 
 ###################################################
@@ -176,8 +174,8 @@ include $(SOURCE_DIR)/middleware/MTK/bluetooth/module.mk
 
 all: cleanlog proj ; $(info $$var is [${var}])echo Hello world
 	@mkdir -p $(BUILD_DIR)
-	@$(SIZE) $(OUTPATH)/$(PROJ_NAME).elf
-	@$(SOURCE_DIR)/tools/scripts/build/copy_firmware.sh $(SOURCE_DIR) $(OUTPATH) $(IC_CONFIG) $(BOARD_CONFIG) $(PROJ_NAME).bin $(PWD)
+	$(SIZE) $(OUTPATH)/$(PROJ_NAME).elf
+	./copy_firmware.sh $(SOURCE_DIR) $(OUTPATH) $(IC_CONFIG) $(BOARD_CONFIG) $(PROJ_NAME).bin $(PWD) linkit7697_hdk
 
 MOD_EXTRA = BUILD_DIR=$(BUILD_DIR) OUTPATH=$(OUTPATH) PROJ_PATH=$(PROJ_PATH)
 
@@ -188,21 +186,21 @@ $(MODULE_PATH):
 
 proj: $(OUTPATH)/$(PROJ_NAME).elf
 
-$(OUTPATH)/$(PROJ_NAME).elf: $(C_OBJS) $(CXX_OBJS) $(S_OBJS) $(LIBS)
+$(OUTPATH)/$(PROJ_NAME).elf: $(C_OBJS) $(CXX_OBJS) $(S_OBJS) $(LIBS) $(MY_C_OBJS) $(MY_S_OBJS)
 	@echo Linking...
-	@if [ -e "$@" ]; then rm -f "$@"; fi
-	@if [ -e "$(OUTPATH)/$(PROJ_NAME).map" ]; then rm -f "$(OUTPATH)/$(PROJ_NAME).map"; fi
-	@if [ -e "$(OUTPATH)/$(PROJ_NAME).dis" ]; then rm -f "$(OUTPATH)/$(PROJ_NAME).dis"; fi
-	@if [ -e "$(OUTPATH)/$(PROJ_NAME).hex" ]; then rm -f "$(OUTPATH)/$(PROJ_NAME).hex"; fi
-	@if [ -e "$(OUTPATH)/$(PROJ_NAME).bin" ]; then rm -f "$(OUTPATH)/$(PROJ_NAME).bin"; fi
+	if [ -e "$@" ]; then rm -f "$@"; fi
+	if [ -e "$(OUTPATH)/$(PROJ_NAME).map" ]; then rm -f "$(OUTPATH)/$(PROJ_NAME).map"; fi
+	if [ -e "$(OUTPATH)/$(PROJ_NAME).dis" ]; then rm -f "$(OUTPATH)/$(PROJ_NAME).dis"; fi
+	if [ -e "$(OUTPATH)/$(PROJ_NAME).hex" ]; then rm -f "$(OUTPATH)/$(PROJ_NAME).hex"; fi
+	if [ -e "$(OUTPATH)/$(PROJ_NAME).bin" ]; then rm -f "$(OUTPATH)/$(PROJ_NAME).bin"; fi
 	@$(CC) $(LDFLAGS) -Wl,--start-group $^ -Wl,--end-group -Wl,-Map=$(OUTPATH)/$(PROJ_NAME).map -lm -o $@ >>$(ERR_LOG)
-	@$(OBJDUMP) -D $(OUTPATH)/$(PROJ_NAME).elf > $(OUTPATH)/$(PROJ_NAME).dis
-	@$(OBJCOPY) -O ihex $(OUTPATH)/$(PROJ_NAME).elf $(OUTPATH)/$(PROJ_NAME).hex
-	@$(OBJCOPY) -O binary $(OUTPATH)/$(PROJ_NAME).elf $(OUTPATH)/$(PROJ_NAME).bin
+	$(OBJDUMP) -D $(OUTPATH)/$(PROJ_NAME).elf > $(OUTPATH)/$(PROJ_NAME).dis
+	$(OBJCOPY) -O ihex $(OUTPATH)/$(PROJ_NAME).elf $(OUTPATH)/$(PROJ_NAME).hex
+	$(OBJCOPY) -O binary $(OUTPATH)/$(PROJ_NAME).elf $(OUTPATH)/$(PROJ_NAME).bin
 	@echo Done
 
 
-include $(SOURCE_DIR)/.rule.mk
+include ./rule.mk
 
 clean:
 	rm -rf $(OUTPATH)
-- 
2.16.2

